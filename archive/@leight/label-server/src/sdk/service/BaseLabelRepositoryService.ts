/**
	This is a file generated by MCP (managed code pattern) approach.

    So, please, DO NOT modify this file as it would get re-generated and you would be f*cked up.
 */
import {
    $LabelRepository,
    $LabelRepositoryMapper,
    type LabelSource
}                                  from "@leight/label";
import {
    type IRepository,
    type IRepositoryMapper,
    type IRepositoryService
}                                  from "@leight/source";
import {AbstractRepositoryService} from "@leight/source-server";

export interface ILabelRepositoryService extends IRepositoryService<LabelSource["Schema"]["Service"]> {
}

export class BaseLabelRepositoryService<
    TServiceSchema extends LabelSource["Schema"]["Service"] = LabelSource["Schema"]["Service"]
> extends AbstractRepositoryService<TServiceSchema> implements ILabelRepositoryService {
	static inject = [
        $LabelRepository,
        $LabelRepositoryMapper,
    ];

    constructor(
        protected $repository: IRepository<TServiceSchema>,
        protected $mapper: IRepositoryMapper<TServiceSchema>,
    ) {
        super();
    }

    mapper(): IRepositoryMapper<TServiceSchema> {
        return this.$mapper;
    }

    repository(): IRepository<TServiceSchema> {
        return this.$repository;
    }
}

/**
 * Default export marking a file it's generated and also preventing failing
 * an empty file export (every module "must" have an export).
 */
export const $leight_qy6mxa0ep5jwa8s6cmb0f0zv = true;
