(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{3525:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(2855)}])},8273:function(e,t,n){"use strict";var i=n(2322),s=n(6577),o=n.n(s);let a={logo:(0,i.jsxs)("div",{style:{width:"10em",display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"center"},children:[(0,i.jsx)(o(),{alt:"logo",src:"https://avatars.githubusercontent.com/u/74918176?s=96&v=4",width:24,height:24}),(0,i.jsx)("span",{children:"Project: Leight Viv"})]}),project:{link:"https://github.com/leight-core/viv"},docsRepositoryBase:"https://github.com/leight-core/viv/tree/main/nextra",footer:{text:"Project Leight Viv Documentation"},sidebar:{defaultMenuCollapseLevel:1,toggleButton:!0},banner:{key:"wip",text:"This documentation is still work in progress, so be please patient."},toc:{float:!0}};t.Z=a},2855:function(e,t,n){"use strict";n.r(t);var i=n(2322),s=n(7846),o=n(8511),a=n(8273);n(6908);var d=n(5392);function c(e){let t=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",code:"code",em:"em",h3:"h3",strong:"strong"},(0,d.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{children:"Project: Leight Viv"}),"\n",(0,i.jsx)(t.h2,{id:"welcome",children:"Welcome"}),"\n",(0,i.jsxs)(t.p,{children:["This project is a collection of ",(0,i.jsx)(t.a,{href:"docs/packages",children:"fullstack libraries"})," and concepts which should drastically simplify development of quite any\napplication."]}),"\n",(0,i.jsx)(t.p,{children:"Everything done in this project is highly opinionated, but also quite versatile, so one could alter basically anything."}),"\n",(0,i.jsxs)(t.p,{children:["One of the base concepts this project uses is ",(0,i.jsx)(t.code,{children:"MCP"})," ",(0,i.jsx)(t.a,{href:"docs/concepts/mcp",children:"see more in docs"})," which can simplify a lot of stuff in basically any project."]}),"\n",(0,i.jsx)(t.h2,{id:"stack",children:"Stack"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Here are main parts the whole collection is built on top. You can find other pieces, but those are worth mentioning."})}),"\n",(0,i.jsx)(t.h3,{id:"nextjs",children:"Next.js"}),"\n",(0,i.jsxs)(t.p,{children:["Because ",(0,i.jsx)(t.a,{href:"https://nextjs.org/",children:"Next.js"})," is incredibly simple, but also powerful framework, we got you covered with default support for some stuff."]}),"\n",(0,i.jsx)(t.h3,{id:"prisma",children:"Prisma"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://www.prisma.io/",children:"Prisma"})," is the ultimate database tool providing typings for database model. Leight implements some tools which separate and simplifies usage of prisma."]}),"\n",(0,i.jsxs)(t.p,{children:["With ",(0,i.jsx)(t.code,{children:"MCP"})," in mind, everything has ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/zod",children:"Zod schema"})," generated by the great tool of ",(0,i.jsx)(t.a,{href:"https://github.com/chrishoermann",children:"this guy"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/chrishoermann/zod-prisma-types",children:"zod-prisma-types"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"zod",children:"Zod"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/zod",children:"Zod"})," is incredible piece of software which changes thinking of ",(0,i.jsx)(t.code,{children:"Interfaces"})," to thinking of ",(0,i.jsx)(t.code,{children:"Schemas"}),"; so everything you have should have a ",(0,i.jsx)(t.code,{children:"Schema"}),", so you can validate all the data\nand ",(0,i.jsx)(t.strong,{children:"also generated TypeScript stuff from it"}),"!"]}),"\n",(0,i.jsx)(t.h3,{id:"zustand",children:"Zustand"}),"\n",(0,i.jsxs)(t.p,{children:["Every application needs ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/zustand",children:"state management"}),". So Leight implements set of packages which simplifies work with Zustand, provides Context Providers and set of\n",(0,i.jsx)(t.a,{href:"docs/packages/zustand",children:"generated hooks"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"trpc",children:"tRPC"}),"\n",(0,i.jsxs)(t.p,{children:["We're talking about fullstack here, so ",(0,i.jsx)(t.a,{href:"https://trpc.io/",children:"tRPC"})," is the only choice we have. There is built-in support for generating procedures to simplify accessing\n",(0,i.jsx)(t.a,{href:"docs/packages/source",children:"Source"})," with just only one generated method."]}),"\n",(0,i.jsx)(t.h3,{id:"mantine-ui",children:"Mantine UI"}),"\n",(0,i.jsxs)(t.p,{children:["Because writing styles manually is quite ineffective and expensive, there is support for ",(0,i.jsx)(t.a,{href:"https://mantine.dev/",children:"Mantine"})," with some wrapped components."]}),"\n",(0,i.jsx)(t.h3,{id:"esbuild",children:"esbuild"}),"\n",(0,i.jsxs)(t.p,{children:["Building is done in two steps: one is ",(0,i.jsx)(t.a,{href:"https://esbuild.github.io/",children:"esbuild"})," handling transpilation, second ",(0,i.jsx)(t.a,{href:"https://www.typescriptlang.org/",children:"TSC"})," for types generation; also, a ",(0,i.jsx)(t.a,{href:"docs/packages/esbuild",children:"package"})," is\nexported to simplify this process for you."]}),"\n",(0,i.jsx)(t.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,i.jsxs)(t.p,{children:["It's an opinion, but... there is no other choice: the project is built on top of ",(0,i.jsx)(t.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"})," and heavily uses types to make you live ",(0,i.jsx)(t.strong,{children:"a lot"})," easier. Ok, there are some tradeoffs, ",(0,i.jsx)(t.em,{children:"but who cares"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsx)(t.p,{children:"All the time new app is created, there is a lot of stuff repeatedly created, a lot of same concepts, data fetching, mutations and so on."}),"\n",(0,i.jsx)(t.p,{children:'This collection aims to make kind of "standard" which offloads thinking of "how to get data", "how to sort data", creating tables, forms, connecting them to the backend\nand a lot of other stuff.'}),"\n",(0,i.jsxs)(t.p,{children:["So here we're: you can pick ",(0,i.jsx)(t.a,{href:"docs/packages",children:"some tools"}),", you can use a ",(0,i.jsx)(t.a,{href:"docs/workbench",children:"whole collection"})," and simplify your developer life a lot by generating pieces of repeated code,\nhaving everything typed and so on."]}),"\n",(0,i.jsx)(t.h2,{id:"maturity",children:"Maturity"}),"\n",(0,i.jsxs)(t.p,{children:["You see this as yet another project. ",(0,i.jsx)(t.em,{children:"You're right."})]}),"\n",(0,i.jsxs)(t.p,{children:["But it was ",(0,i.jsx)(t.strong,{children:"quite long time"})," in development and it's used in some projects, concepts and ",(0,i.jsx)(t.code,{children:"API"})," of the whole collection is quite polished today and you can use whatever\npiece you want/need. The overall goal is to provide best practices over the best libraries available on the current market."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"This collection"})," may be seen as an inspiration, how you can do things in ",(0,i.jsx)(t.em,{children:"a quite a nice way"})," - not simple, because you can use thousands of lines of code to do relatively simple thing, but it's worth it, because\nat least - you will ",(0,i.jsx)(t.strong,{children:"not"})," repeat yourself :)."]})]})}n(6577);let r={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/index.mdx",route:"/",headings:[{depth:1,value:"Project: Leight Viv",id:"project-leight-viv"},{depth:2,value:"Welcome",id:"welcome"},{depth:2,value:"Stack",id:"stack"},{depth:3,value:"Next.js",id:"nextjs"},{depth:3,value:"Prisma",id:"prisma"},{depth:3,value:"Zod",id:"zod"},{depth:3,value:"Zustand",id:"zustand"},{depth:3,value:"tRPC",id:"trpc"},{depth:3,value:"Mantine UI",id:"mantine-ui"},{depth:3,value:"esbuild",id:"esbuild"},{depth:3,value:"TypeScript",id:"typescript"},{depth:2,value:"Motivation",id:"motivation"},{depth:2,value:"Maturity",id:"maturity"}],timestamp:1680026356e3,pageMap:[{kind:"MdxPage",name:"about",route:"/about"},{kind:"Folder",name:"docs",route:"/docs",children:[{kind:"Folder",name:"concepts",route:"/docs/concepts",children:[{kind:"MdxPage",name:"code-splitting",route:"/docs/concepts/code-splitting"},{kind:"MdxPage",name:"index",route:"/docs/concepts"},{kind:"MdxPage",name:"mcp",route:"/docs/concepts/mcp"},{kind:"MdxPage",name:"monorepo",route:"/docs/concepts/monorepo"},{kind:"MdxPage",name:"package.json",route:"/docs/concepts/package.json"},{kind:"Folder",name:"source",route:"/docs/concepts/source",children:[{kind:"MdxPage",name:"client",route:"/docs/concepts/source/client"},{kind:"MdxPage",name:"index",route:"/docs/concepts/source"},{kind:"MdxPage",name:"server",route:"/docs/concepts/source/server"},{kind:"Meta",data:{index:"Introduction",client:"Client",server:"Server"}}]},{kind:"Meta",data:{index:"Introduction",monorepo:"Monorepo","package.json":"package.json",mcp:"Managed Code Pattern","code-splitting":"Code splitting",source:"Source"}}]},{kind:"Folder",name:"getting-started",route:"/docs/getting-started",children:[{kind:"MdxPage",name:"installation",route:"/docs/getting-started/installation"},{kind:"MdxPage",name:"packages",route:"/docs/getting-started/packages"},{kind:"Meta",data:{packages:"Packages",installation:"Installation"}}]},{kind:"MdxPage",name:"index",route:"/docs"},{kind:"Folder",name:"packages",route:"/docs/packages",children:[{kind:"MdxPage",name:"calendar-client",route:"/docs/packages/calendar-client"},{kind:"MdxPage",name:"container",route:"/docs/packages/container"},{kind:"MdxPage",name:"context-client",route:"/docs/packages/context-client"},{kind:"MdxPage",name:"esbuild",route:"/docs/packages/esbuild"},{kind:"MdxPage",name:"i18n-client",route:"/docs/packages/i18n-client"},{kind:"MdxPage",name:"index",route:"/docs/packages"},{kind:"MdxPage",name:"mantine",route:"/docs/packages/mantine"},{kind:"MdxPage",name:"sdk",route:"/docs/packages/sdk"},{kind:"MdxPage",name:"source",route:"/docs/packages/source"},{kind:"MdxPage",name:"utils-client",route:"/docs/packages/utils-client"},{kind:"MdxPage",name:"zustand",route:"/docs/packages/zustand"},{kind:"Meta",data:{index:"Overview","calendar-client":"@leight/calendar-client",container:"@leight/container","context-client":"@leight/context-client",esbuild:"@leight/esbuild","i18n-client":"@leight/i18n-client",mantine:"@leight/mantine",sdk:"@leight/sdk",source:"@leight/source","utils-client":"@leight/utils-client",zustand:"@leight/zustand"}}]},{kind:"Folder",name:"workbench",route:"/docs/workbench",children:[{kind:"MdxPage",name:"i18n",route:"/docs/workbench/i18n"},{kind:"MdxPage",name:"index",route:"/docs/workbench"},{kind:"MdxPage",name:"monorepo",route:"/docs/workbench/monorepo"},{kind:"MdxPage",name:"prisma",route:"/docs/workbench/prisma"},{kind:"MdxPage",name:"sdk",route:"/docs/workbench/sdk"},{kind:"MdxPage",name:"zustand",route:"/docs/workbench/zustand"},{kind:"Meta",data:{index:"Overview",monorepo:"Monorepo",prisma:"Prisma",i18n:"i18n",zustand:"Zustand",sdk:"SDK"}}]},{kind:"Meta",data:{index:{title:"Welcome"},concepts:"Concepts","getting-started":"Getting started",workbench:"Workbench",packages:"Packages"}}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Meta",data:{"*":{type:"page"},index:{title:"Home",theme:{toc:!0}},docs:"Docs",about:{title:"About",theme:{typesetting:"article"}}}}],flexsearch:{codeblocks:!0},title:"Project: Leight Viv"},pageNextRoute:"/",nextraLayout:o.ZP,themeConfig:a.Z};t.default=(0,s.j)(r)}},function(e){e.O(0,[774,442,888,179],function(){return e(e.s=3525)}),_N_E=e.O()}]);